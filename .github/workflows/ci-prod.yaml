name: CI PRD

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:
  pull_request_target:
    types: [ closed ]
    branches:
      - main

jobs:
  check-application:
    # Não executar este job quando a PR for fechada
    if: github.event_name != 'pull_request_target'
    strategy:
      matrix:
        node: [ '20' ]
        ubuntu: [ 'ubuntu-latest' ]
    runs-on: ${{ matrix.ubuntu }}

    env:
      NODE_ENV: prod
      API_VERSION: prod

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: check PR head branch
        run: |
          if [[ "${{ github.head_ref }}" != release/* ]]; then
            echo "PRs to main must come from a release/* branch. PR is from '${{ github.head_ref }}'"
            exit 1
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: Get branch name
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF#release/} | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: Update API Version
        run: echo "API_VERSION=${{ env.BRANCH_NAME }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Lint código
        run: npm run lint

      - name: Build aplicação
        run: npm run build
        env:
          VITE_API_VERSION: ${{ env.API_VERSION }}

  build-push-image:
    # Executar apenas quando a PR for fechada e mesclada
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      NODE_ENV: prod
      API_VERSION: prod

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Get branch name
        shell: bash
        run: |
          if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            REF="${{ github.event.pull_request.head.ref }}"
            echo "BRANCH_NAME=$(echo ${REF#release/} | cut -d'/' -f2)" >> $GITHUB_ENV
          else
            echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF#release/} | cut -d'/' -f2)" >> $GITHUB_ENV
          fi

      - name: Update API Version
        run: echo "API_VERSION=${{ env.BRANCH_NAME }}" >> $GITHUB_ENV

      - name: Install dependencies
        run: npm ci

      - name: Build aplicação
        run: npm run build
        env:
          VITE_API_VERSION: ${{ env.API_VERSION }}

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            diegoneves/sense-core-web:latest
            diegoneves/sense-core-web:${{ env.API_VERSION }}
          context: .
          file: ./Dockerfile